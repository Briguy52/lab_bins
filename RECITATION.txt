Bins: Code Critiquen 
Brian Lin bl131
Austin Hua ah335

Readability

What pieces of code help versus obscure your understanding of the algorithm?
-The Disk methods are all relatively short, simple, and aptly titled. These help us understand the algorithm.
-The Bins main method is very long and uncommented. This makes the algorithm hard to understand.
What comments might be helpful within the code?
Are there places where the code could be more concise and also more clear?
-The Bins main method could be improved with comments
-The Bins main method should also be shortened or split into their own methods based on function

Testability
How would you test this code for bugs?
-Run the program with test cases, including specific edge cases
Give a specific example of a "test case" as the code is currently written.
-Text file containing: 1000001, 99999 
What additional functions may be helpful?
-An 'add to bin/disk' function that loops over the scanned input 
Give a specific example of a "test case" for your new function.
-Text file containing: 500001, 500002, 500003


Extensibility

What Code Smells can you find?
-Redundancy, the print statements in the Bins main method are written twice and can instead be placed in their own method
-Change preventers, the duplicate print statements would force you to modify two lines for a single desired change
-The for loops are also the same and a function with a for loop could be used instead. 
What suggestions does this code make about how someone would extend it in the future to compare the performance of a wider variety of fitting algorithms?
-Currently, in order to add more fitting algorithms, you would have to manually type in code within the main method. Instead, you could have the main method take in separate Java files corresponding to different fitting algorithms. 
What dependencies are there between different parts of the code?
-You are forced to run both the in-order and decreasing methods one after the other
-The Disk.java class is required for Bins.java to run
How easy to find are those dependencies?
-Difficult, you have to visually parse the code for instantiation of other classes 
Can you clarify or remove those dependencies?
-These two different orders should be placed in separate methods to run independently 